1. Sukurkite repozitoriją, kurioje atliksite darbus. [1]
  - papildykite .gitignore failą, jog nebūtų reaguojama į /node_modules aplanko pasikeitimus. Šį commit'ą pavadinkite 'init'
  - po kiekvienos sekančios užduoties atlikite commit'ą įvardindami ką darėte.

2. Sukurkite pardavimui skirtų žaislų masyvą naudodami JSON server. [1]
    Daiktus sukurkite taip, jog būtų panaudotos visos savybių variacijos.
    Taip pat rekomenduojama susikurti json duomenų kopiją, jog aplikacijai pakeitus duomenis būtų galima persikopijuoti orginalius/pradinius duomenis.
    žaislą aprašančios savybės:
      type Toy = {
        id: string,
        title: string,
        price: {
          currency: '$' | '€',
          amount: number
        },
        ageRestrictions: {
          from: number;
        } | null,
        discount: {
          type: 'percentage' | 'toFixed' | 'amount',
          amount: number
        },
        imgSrc: 'string'
      }

3. Paleiskite JSON server, jog būtų galimą juo naudotis: [1]
  - sukurkite failą readme.md, ir jame aprašykite:
    - kokių reikia programų
    - kaip ir ką reikią suinstaliuoti
    - kaip paleisti projektą

4. Papildykite failą API.js, aprašyti HTTP requestams. Patikrinkite rezultatus konsolėje. [1]
  HTTP metodas | url         | tikslas
  ------------------------------------------------------
  GET          | /toys       | gauti visus žaislus
  DELETE       | /toys/{id}  | ištrinti vieną žaislą

5. Faile ToysGridComponent.js panaudokite API.js faile sukurtą funkciją gauti visiems žaislams: [1]
  - Papildyti metodą init, jog būtų parsiunčiami pradiniai duomenys ir įrašomi į this.state.toys

6. Įgalinti laukimo animaciją, kol yra parsiunčiami duomenys [1]
  - dirbtinai užvilkinti parsiuntimą 1s, jog matytūsi animaciją
  - papildykite render, jog su kiekvienu objektu būtų kuriami kortelės komponenetai

7. Faile ToyCardComponent.js init metodą, jog pagal objekto this.props duomenis, būtų atvaizduojama koretelė [1]

8. Faile ToysGridComponent.js komponente sukurkite metodą deleteToy ir įgalinkite jį, jog būtų trinami duomenys serveryje pagal id

9. Įgalinkite funkcionalumą, jog trinimas veiktų paspaudus kortelės ištrynimo mygtuką:
  - Kiekvienai kortelei perduokite funkciją į props.onDelete, kuri vykdytų ToysGridComponent.prototype.deleteToy metodą su atitinkamu id
  - Uždėkite įvykio klausiklį and ToyCardComponent komponento mygtuko, jog jį paspaudus būtų vykdoma funkcija gauta iš this.props.onDelete.

10. Po duomenų ištrinimo atnaujinkite koretelių parsiuntimą ir atvaizdavimą [1]



{
  "Furniture": [
    {
      "id": "103",
      "title": "Kotlin",
      "type": "table",
      "price": 2345,
      "location": {
        "country": "Austria",
        "city": "Vienna",
        "street": "Ostmundu st. 39"
      },
      "owner": {
        "fullname": "Aukelele Murtianz",
        "mobile": "+43723742323",
        "address": "Vancoover st. 44",
        "email": "This_is_aukelele@majorFurniture.com"
      }
    },
    {
      "id": "104",
      "title": "Kontovice",
      "type": "table",
      "price": 1000,
      "location": {
        "country": "Poland",
        "city": "Warsaw",
        "street": "Najwazniejszych ul. 23"
      },
      "owner": {
        "fullname": "Jakub Potenczyk",
        "mobile": "+4837712323",
        "address": "stuletnia st. 27",
        "email": "jakub112@goldenWoods.com"
      }
    },
    {
      "id": "105",
      "title": "Ivan",
      "type": "chair",
      "price": 104,
      "location": {
        "country": "Estonia",
        "city": "Tallinn ",
        "street": "Aukvandu street 50"
      },
      "owner": {
        "fullname": "Ivan Boltomer",
        "mobile": "+3727792323",
        "address": "Seiminol st. 44",
        "email": "IvanBoltomer@foogle.com"
      }
    }
  ]
}